/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// VpnTunnelTerminationsListRoleIcParameterInner the model 'VpnTunnelTerminationsListRoleIcParameterInner'
type VpnTunnelTerminationsListRoleIcParameterInner string

// List of vpn_tunnel_terminations_list_role__ic_parameter_inner
const (
	VPNTUNNELTERMINATIONSLISTROLEICPARAMETERINNER_HUB VpnTunnelTerminationsListRoleIcParameterInner = "hub"
	VPNTUNNELTERMINATIONSLISTROLEICPARAMETERINNER_PEER VpnTunnelTerminationsListRoleIcParameterInner = "peer"
	VPNTUNNELTERMINATIONSLISTROLEICPARAMETERINNER_SPOKE VpnTunnelTerminationsListRoleIcParameterInner = "spoke"
)

// All allowed values of VpnTunnelTerminationsListRoleIcParameterInner enum
var AllowedVpnTunnelTerminationsListRoleIcParameterInnerEnumValues = []VpnTunnelTerminationsListRoleIcParameterInner{
	"hub",
	"peer",
	"spoke",
}

func (v *VpnTunnelTerminationsListRoleIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VpnTunnelTerminationsListRoleIcParameterInner(value)
	for _, existing := range AllowedVpnTunnelTerminationsListRoleIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VpnTunnelTerminationsListRoleIcParameterInner", value)
}

// NewVpnTunnelTerminationsListRoleIcParameterInnerFromValue returns a pointer to a valid VpnTunnelTerminationsListRoleIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVpnTunnelTerminationsListRoleIcParameterInnerFromValue(v string) (*VpnTunnelTerminationsListRoleIcParameterInner, error) {
	ev := VpnTunnelTerminationsListRoleIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VpnTunnelTerminationsListRoleIcParameterInner: valid values are %v", v, AllowedVpnTunnelTerminationsListRoleIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VpnTunnelTerminationsListRoleIcParameterInner) IsValid() bool {
	for _, existing := range AllowedVpnTunnelTerminationsListRoleIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to vpn_tunnel_terminations_list_role__ic_parameter_inner value
func (v VpnTunnelTerminationsListRoleIcParameterInner) Ptr() *VpnTunnelTerminationsListRoleIcParameterInner {
	return &v
}

type NullableVpnTunnelTerminationsListRoleIcParameterInner struct {
	value *VpnTunnelTerminationsListRoleIcParameterInner
	isSet bool
}

func (v NullableVpnTunnelTerminationsListRoleIcParameterInner) Get() *VpnTunnelTerminationsListRoleIcParameterInner {
	return v.value
}

func (v *NullableVpnTunnelTerminationsListRoleIcParameterInner) Set(val *VpnTunnelTerminationsListRoleIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnTunnelTerminationsListRoleIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnTunnelTerminationsListRoleIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnTunnelTerminationsListRoleIcParameterInner(val *VpnTunnelTerminationsListRoleIcParameterInner) *NullableVpnTunnelTerminationsListRoleIcParameterInner {
	return &NullableVpnTunnelTerminationsListRoleIcParameterInner{value: val, isSet: true}
}

func (v NullableVpnTunnelTerminationsListRoleIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnTunnelTerminationsListRoleIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


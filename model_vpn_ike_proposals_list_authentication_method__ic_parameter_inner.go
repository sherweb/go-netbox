/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// VpnIkeProposalsListAuthenticationMethodIcParameterInner the model 'VpnIkeProposalsListAuthenticationMethodIcParameterInner'
type VpnIkeProposalsListAuthenticationMethodIcParameterInner string

// List of vpn_ike_proposals_list_authentication_method__ic_parameter_inner
const (
	VPNIKEPROPOSALSLISTAUTHENTICATIONMETHODICPARAMETERINNER_CERTIFICATES VpnIkeProposalsListAuthenticationMethodIcParameterInner = "certificates"
	VPNIKEPROPOSALSLISTAUTHENTICATIONMETHODICPARAMETERINNER_DSA_SIGNATURES VpnIkeProposalsListAuthenticationMethodIcParameterInner = "dsa-signatures"
	VPNIKEPROPOSALSLISTAUTHENTICATIONMETHODICPARAMETERINNER_PRESHARED_KEYS VpnIkeProposalsListAuthenticationMethodIcParameterInner = "preshared-keys"
	VPNIKEPROPOSALSLISTAUTHENTICATIONMETHODICPARAMETERINNER_RSA_SIGNATURES VpnIkeProposalsListAuthenticationMethodIcParameterInner = "rsa-signatures"
)

// All allowed values of VpnIkeProposalsListAuthenticationMethodIcParameterInner enum
var AllowedVpnIkeProposalsListAuthenticationMethodIcParameterInnerEnumValues = []VpnIkeProposalsListAuthenticationMethodIcParameterInner{
	"certificates",
	"dsa-signatures",
	"preshared-keys",
	"rsa-signatures",
}

func (v *VpnIkeProposalsListAuthenticationMethodIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VpnIkeProposalsListAuthenticationMethodIcParameterInner(value)
	for _, existing := range AllowedVpnIkeProposalsListAuthenticationMethodIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VpnIkeProposalsListAuthenticationMethodIcParameterInner", value)
}

// NewVpnIkeProposalsListAuthenticationMethodIcParameterInnerFromValue returns a pointer to a valid VpnIkeProposalsListAuthenticationMethodIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVpnIkeProposalsListAuthenticationMethodIcParameterInnerFromValue(v string) (*VpnIkeProposalsListAuthenticationMethodIcParameterInner, error) {
	ev := VpnIkeProposalsListAuthenticationMethodIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VpnIkeProposalsListAuthenticationMethodIcParameterInner: valid values are %v", v, AllowedVpnIkeProposalsListAuthenticationMethodIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VpnIkeProposalsListAuthenticationMethodIcParameterInner) IsValid() bool {
	for _, existing := range AllowedVpnIkeProposalsListAuthenticationMethodIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to vpn_ike_proposals_list_authentication_method__ic_parameter_inner value
func (v VpnIkeProposalsListAuthenticationMethodIcParameterInner) Ptr() *VpnIkeProposalsListAuthenticationMethodIcParameterInner {
	return &v
}

type NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner struct {
	value *VpnIkeProposalsListAuthenticationMethodIcParameterInner
	isSet bool
}

func (v NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner) Get() *VpnIkeProposalsListAuthenticationMethodIcParameterInner {
	return v.value
}

func (v *NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner) Set(val *VpnIkeProposalsListAuthenticationMethodIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnIkeProposalsListAuthenticationMethodIcParameterInner(val *VpnIkeProposalsListAuthenticationMethodIcParameterInner) *NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner {
	return &NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner{value: val, isSet: true}
}

func (v NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnIkeProposalsListAuthenticationMethodIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


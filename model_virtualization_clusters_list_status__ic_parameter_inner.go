/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// VirtualizationClustersListStatusIcParameterInner the model 'VirtualizationClustersListStatusIcParameterInner'
type VirtualizationClustersListStatusIcParameterInner string

// List of virtualization_clusters_list_status__ic_parameter_inner
const (
	VIRTUALIZATIONCLUSTERSLISTSTATUSICPARAMETERINNER_ACTIVE VirtualizationClustersListStatusIcParameterInner = "active"
	VIRTUALIZATIONCLUSTERSLISTSTATUSICPARAMETERINNER_DECOMMISSIONING VirtualizationClustersListStatusIcParameterInner = "decommissioning"
	VIRTUALIZATIONCLUSTERSLISTSTATUSICPARAMETERINNER_OFFLINE VirtualizationClustersListStatusIcParameterInner = "offline"
	VIRTUALIZATIONCLUSTERSLISTSTATUSICPARAMETERINNER_PLANNED VirtualizationClustersListStatusIcParameterInner = "planned"
	VIRTUALIZATIONCLUSTERSLISTSTATUSICPARAMETERINNER_STAGING VirtualizationClustersListStatusIcParameterInner = "staging"
)

// All allowed values of VirtualizationClustersListStatusIcParameterInner enum
var AllowedVirtualizationClustersListStatusIcParameterInnerEnumValues = []VirtualizationClustersListStatusIcParameterInner{
	"active",
	"decommissioning",
	"offline",
	"planned",
	"staging",
}

func (v *VirtualizationClustersListStatusIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VirtualizationClustersListStatusIcParameterInner(value)
	for _, existing := range AllowedVirtualizationClustersListStatusIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VirtualizationClustersListStatusIcParameterInner", value)
}

// NewVirtualizationClustersListStatusIcParameterInnerFromValue returns a pointer to a valid VirtualizationClustersListStatusIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualizationClustersListStatusIcParameterInnerFromValue(v string) (*VirtualizationClustersListStatusIcParameterInner, error) {
	ev := VirtualizationClustersListStatusIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VirtualizationClustersListStatusIcParameterInner: valid values are %v", v, AllowedVirtualizationClustersListStatusIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualizationClustersListStatusIcParameterInner) IsValid() bool {
	for _, existing := range AllowedVirtualizationClustersListStatusIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to virtualization_clusters_list_status__ic_parameter_inner value
func (v VirtualizationClustersListStatusIcParameterInner) Ptr() *VirtualizationClustersListStatusIcParameterInner {
	return &v
}

type NullableVirtualizationClustersListStatusIcParameterInner struct {
	value *VirtualizationClustersListStatusIcParameterInner
	isSet bool
}

func (v NullableVirtualizationClustersListStatusIcParameterInner) Get() *VirtualizationClustersListStatusIcParameterInner {
	return v.value
}

func (v *NullableVirtualizationClustersListStatusIcParameterInner) Set(val *VirtualizationClustersListStatusIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualizationClustersListStatusIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualizationClustersListStatusIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualizationClustersListStatusIcParameterInner(val *VirtualizationClustersListStatusIcParameterInner) *NullableVirtualizationClustersListStatusIcParameterInner {
	return &NullableVirtualizationClustersListStatusIcParameterInner{value: val, isSet: true}
}

func (v NullableVirtualizationClustersListStatusIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualizationClustersListStatusIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


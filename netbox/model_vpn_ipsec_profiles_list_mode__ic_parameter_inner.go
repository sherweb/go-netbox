/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// VpnIpsecProfilesListModeIcParameterInner the model 'VpnIpsecProfilesListModeIcParameterInner'
type VpnIpsecProfilesListModeIcParameterInner string

// List of vpn_ipsec_profiles_list_mode__ic_parameter_inner
const (
	VPNIPSECPROFILESLISTMODEICPARAMETERINNER_AH VpnIpsecProfilesListModeIcParameterInner = "ah"
	VPNIPSECPROFILESLISTMODEICPARAMETERINNER_ESP VpnIpsecProfilesListModeIcParameterInner = "esp"
)

// All allowed values of VpnIpsecProfilesListModeIcParameterInner enum
var AllowedVpnIpsecProfilesListModeIcParameterInnerEnumValues = []VpnIpsecProfilesListModeIcParameterInner{
	"ah",
	"esp",
}

func (v *VpnIpsecProfilesListModeIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VpnIpsecProfilesListModeIcParameterInner(value)
	for _, existing := range AllowedVpnIpsecProfilesListModeIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VpnIpsecProfilesListModeIcParameterInner", value)
}

// NewVpnIpsecProfilesListModeIcParameterInnerFromValue returns a pointer to a valid VpnIpsecProfilesListModeIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVpnIpsecProfilesListModeIcParameterInnerFromValue(v string) (*VpnIpsecProfilesListModeIcParameterInner, error) {
	ev := VpnIpsecProfilesListModeIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VpnIpsecProfilesListModeIcParameterInner: valid values are %v", v, AllowedVpnIpsecProfilesListModeIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VpnIpsecProfilesListModeIcParameterInner) IsValid() bool {
	for _, existing := range AllowedVpnIpsecProfilesListModeIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to vpn_ipsec_profiles_list_mode__ic_parameter_inner value
func (v VpnIpsecProfilesListModeIcParameterInner) Ptr() *VpnIpsecProfilesListModeIcParameterInner {
	return &v
}

type NullableVpnIpsecProfilesListModeIcParameterInner struct {
	value *VpnIpsecProfilesListModeIcParameterInner
	isSet bool
}

func (v NullableVpnIpsecProfilesListModeIcParameterInner) Get() *VpnIpsecProfilesListModeIcParameterInner {
	return v.value
}

func (v *NullableVpnIpsecProfilesListModeIcParameterInner) Set(val *VpnIpsecProfilesListModeIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnIpsecProfilesListModeIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnIpsecProfilesListModeIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnIpsecProfilesListModeIcParameterInner(val *VpnIpsecProfilesListModeIcParameterInner) *NullableVpnIpsecProfilesListModeIcParameterInner {
	return &NullableVpnIpsecProfilesListModeIcParameterInner{value: val, isSet: true}
}

func (v NullableVpnIpsecProfilesListModeIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnIpsecProfilesListModeIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// DcimPowerOutletTemplatesListFeedLegIcParameterInner the model 'DcimPowerOutletTemplatesListFeedLegIcParameterInner'
type DcimPowerOutletTemplatesListFeedLegIcParameterInner string

// List of dcim_power_outlet_templates_list_feed_leg__ic_parameter_inner
const (
	DCIMPOWEROUTLETTEMPLATESLISTFEEDLEGICPARAMETERINNER_EMPTY DcimPowerOutletTemplatesListFeedLegIcParameterInner = ""
	DCIMPOWEROUTLETTEMPLATESLISTFEEDLEGICPARAMETERINNER_A DcimPowerOutletTemplatesListFeedLegIcParameterInner = "A"
	DCIMPOWEROUTLETTEMPLATESLISTFEEDLEGICPARAMETERINNER_B DcimPowerOutletTemplatesListFeedLegIcParameterInner = "B"
	DCIMPOWEROUTLETTEMPLATESLISTFEEDLEGICPARAMETERINNER_C DcimPowerOutletTemplatesListFeedLegIcParameterInner = "C"
)

// All allowed values of DcimPowerOutletTemplatesListFeedLegIcParameterInner enum
var AllowedDcimPowerOutletTemplatesListFeedLegIcParameterInnerEnumValues = []DcimPowerOutletTemplatesListFeedLegIcParameterInner{
	"",
	"A",
	"B",
	"C",
}

func (v *DcimPowerOutletTemplatesListFeedLegIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DcimPowerOutletTemplatesListFeedLegIcParameterInner(value)
	for _, existing := range AllowedDcimPowerOutletTemplatesListFeedLegIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DcimPowerOutletTemplatesListFeedLegIcParameterInner", value)
}

// NewDcimPowerOutletTemplatesListFeedLegIcParameterInnerFromValue returns a pointer to a valid DcimPowerOutletTemplatesListFeedLegIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDcimPowerOutletTemplatesListFeedLegIcParameterInnerFromValue(v string) (*DcimPowerOutletTemplatesListFeedLegIcParameterInner, error) {
	ev := DcimPowerOutletTemplatesListFeedLegIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DcimPowerOutletTemplatesListFeedLegIcParameterInner: valid values are %v", v, AllowedDcimPowerOutletTemplatesListFeedLegIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DcimPowerOutletTemplatesListFeedLegIcParameterInner) IsValid() bool {
	for _, existing := range AllowedDcimPowerOutletTemplatesListFeedLegIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to dcim_power_outlet_templates_list_feed_leg__ic_parameter_inner value
func (v DcimPowerOutletTemplatesListFeedLegIcParameterInner) Ptr() *DcimPowerOutletTemplatesListFeedLegIcParameterInner {
	return &v
}

type NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner struct {
	value *DcimPowerOutletTemplatesListFeedLegIcParameterInner
	isSet bool
}

func (v NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner) Get() *DcimPowerOutletTemplatesListFeedLegIcParameterInner {
	return v.value
}

func (v *NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner) Set(val *DcimPowerOutletTemplatesListFeedLegIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDcimPowerOutletTemplatesListFeedLegIcParameterInner(val *DcimPowerOutletTemplatesListFeedLegIcParameterInner) *NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner {
	return &NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner{value: val, isSet: true}
}

func (v NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDcimPowerOutletTemplatesListFeedLegIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


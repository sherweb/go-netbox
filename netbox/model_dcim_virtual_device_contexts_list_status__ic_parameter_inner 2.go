/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// DcimVirtualDeviceContextsListStatusIcParameterInner the model 'DcimVirtualDeviceContextsListStatusIcParameterInner'
type DcimVirtualDeviceContextsListStatusIcParameterInner string

// List of dcim_virtual_device_contexts_list_status__ic_parameter_inner
const (
	DCIMVIRTUALDEVICECONTEXTSLISTSTATUSICPARAMETERINNER_ACTIVE DcimVirtualDeviceContextsListStatusIcParameterInner = "active"
	DCIMVIRTUALDEVICECONTEXTSLISTSTATUSICPARAMETERINNER_OFFLINE DcimVirtualDeviceContextsListStatusIcParameterInner = "offline"
	DCIMVIRTUALDEVICECONTEXTSLISTSTATUSICPARAMETERINNER_PLANNED DcimVirtualDeviceContextsListStatusIcParameterInner = "planned"
)

// All allowed values of DcimVirtualDeviceContextsListStatusIcParameterInner enum
var AllowedDcimVirtualDeviceContextsListStatusIcParameterInnerEnumValues = []DcimVirtualDeviceContextsListStatusIcParameterInner{
	"active",
	"offline",
	"planned",
}

func (v *DcimVirtualDeviceContextsListStatusIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DcimVirtualDeviceContextsListStatusIcParameterInner(value)
	for _, existing := range AllowedDcimVirtualDeviceContextsListStatusIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DcimVirtualDeviceContextsListStatusIcParameterInner", value)
}

// NewDcimVirtualDeviceContextsListStatusIcParameterInnerFromValue returns a pointer to a valid DcimVirtualDeviceContextsListStatusIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDcimVirtualDeviceContextsListStatusIcParameterInnerFromValue(v string) (*DcimVirtualDeviceContextsListStatusIcParameterInner, error) {
	ev := DcimVirtualDeviceContextsListStatusIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DcimVirtualDeviceContextsListStatusIcParameterInner: valid values are %v", v, AllowedDcimVirtualDeviceContextsListStatusIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DcimVirtualDeviceContextsListStatusIcParameterInner) IsValid() bool {
	for _, existing := range AllowedDcimVirtualDeviceContextsListStatusIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to dcim_virtual_device_contexts_list_status__ic_parameter_inner value
func (v DcimVirtualDeviceContextsListStatusIcParameterInner) Ptr() *DcimVirtualDeviceContextsListStatusIcParameterInner {
	return &v
}

type NullableDcimVirtualDeviceContextsListStatusIcParameterInner struct {
	value *DcimVirtualDeviceContextsListStatusIcParameterInner
	isSet bool
}

func (v NullableDcimVirtualDeviceContextsListStatusIcParameterInner) Get() *DcimVirtualDeviceContextsListStatusIcParameterInner {
	return v.value
}

func (v *NullableDcimVirtualDeviceContextsListStatusIcParameterInner) Set(val *DcimVirtualDeviceContextsListStatusIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDcimVirtualDeviceContextsListStatusIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDcimVirtualDeviceContextsListStatusIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDcimVirtualDeviceContextsListStatusIcParameterInner(val *DcimVirtualDeviceContextsListStatusIcParameterInner) *NullableDcimVirtualDeviceContextsListStatusIcParameterInner {
	return &NullableDcimVirtualDeviceContextsListStatusIcParameterInner{value: val, isSet: true}
}

func (v NullableDcimVirtualDeviceContextsListStatusIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDcimVirtualDeviceContextsListStatusIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


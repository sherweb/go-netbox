/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// VpnIkePoliciesListModeIcParameterInner the model 'VpnIkePoliciesListModeIcParameterInner'
type VpnIkePoliciesListModeIcParameterInner string

// List of vpn_ike_policies_list_mode__ic_parameter_inner
const (
	VPNIKEPOLICIESLISTMODEICPARAMETERINNER_EMPTY VpnIkePoliciesListModeIcParameterInner = ""
	VPNIKEPOLICIESLISTMODEICPARAMETERINNER_AGGRESSIVE VpnIkePoliciesListModeIcParameterInner = "aggressive"
	VPNIKEPOLICIESLISTMODEICPARAMETERINNER_MAIN VpnIkePoliciesListModeIcParameterInner = "main"
)

// All allowed values of VpnIkePoliciesListModeIcParameterInner enum
var AllowedVpnIkePoliciesListModeIcParameterInnerEnumValues = []VpnIkePoliciesListModeIcParameterInner{
	"",
	"aggressive",
	"main",
}

func (v *VpnIkePoliciesListModeIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VpnIkePoliciesListModeIcParameterInner(value)
	for _, existing := range AllowedVpnIkePoliciesListModeIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VpnIkePoliciesListModeIcParameterInner", value)
}

// NewVpnIkePoliciesListModeIcParameterInnerFromValue returns a pointer to a valid VpnIkePoliciesListModeIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVpnIkePoliciesListModeIcParameterInnerFromValue(v string) (*VpnIkePoliciesListModeIcParameterInner, error) {
	ev := VpnIkePoliciesListModeIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VpnIkePoliciesListModeIcParameterInner: valid values are %v", v, AllowedVpnIkePoliciesListModeIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VpnIkePoliciesListModeIcParameterInner) IsValid() bool {
	for _, existing := range AllowedVpnIkePoliciesListModeIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to vpn_ike_policies_list_mode__ic_parameter_inner value
func (v VpnIkePoliciesListModeIcParameterInner) Ptr() *VpnIkePoliciesListModeIcParameterInner {
	return &v
}

type NullableVpnIkePoliciesListModeIcParameterInner struct {
	value *VpnIkePoliciesListModeIcParameterInner
	isSet bool
}

func (v NullableVpnIkePoliciesListModeIcParameterInner) Get() *VpnIkePoliciesListModeIcParameterInner {
	return v.value
}

func (v *NullableVpnIkePoliciesListModeIcParameterInner) Set(val *VpnIkePoliciesListModeIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnIkePoliciesListModeIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnIkePoliciesListModeIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnIkePoliciesListModeIcParameterInner(val *VpnIkePoliciesListModeIcParameterInner) *NullableVpnIkePoliciesListModeIcParameterInner {
	return &NullableVpnIkePoliciesListModeIcParameterInner{value: val, isSet: true}
}

func (v NullableVpnIkePoliciesListModeIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnIkePoliciesListModeIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// ExtrasJournalEntriesListKindIcParameterInner the model 'ExtrasJournalEntriesListKindIcParameterInner'
type ExtrasJournalEntriesListKindIcParameterInner string

// List of extras_journal_entries_list_kind__ic_parameter_inner
const (
	EXTRASJOURNALENTRIESLISTKINDICPARAMETERINNER_DANGER ExtrasJournalEntriesListKindIcParameterInner = "danger"
	EXTRASJOURNALENTRIESLISTKINDICPARAMETERINNER_INFO ExtrasJournalEntriesListKindIcParameterInner = "info"
	EXTRASJOURNALENTRIESLISTKINDICPARAMETERINNER_SUCCESS ExtrasJournalEntriesListKindIcParameterInner = "success"
	EXTRASJOURNALENTRIESLISTKINDICPARAMETERINNER_WARNING ExtrasJournalEntriesListKindIcParameterInner = "warning"
)

// All allowed values of ExtrasJournalEntriesListKindIcParameterInner enum
var AllowedExtrasJournalEntriesListKindIcParameterInnerEnumValues = []ExtrasJournalEntriesListKindIcParameterInner{
	"danger",
	"info",
	"success",
	"warning",
}

func (v *ExtrasJournalEntriesListKindIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExtrasJournalEntriesListKindIcParameterInner(value)
	for _, existing := range AllowedExtrasJournalEntriesListKindIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExtrasJournalEntriesListKindIcParameterInner", value)
}

// NewExtrasJournalEntriesListKindIcParameterInnerFromValue returns a pointer to a valid ExtrasJournalEntriesListKindIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExtrasJournalEntriesListKindIcParameterInnerFromValue(v string) (*ExtrasJournalEntriesListKindIcParameterInner, error) {
	ev := ExtrasJournalEntriesListKindIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExtrasJournalEntriesListKindIcParameterInner: valid values are %v", v, AllowedExtrasJournalEntriesListKindIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExtrasJournalEntriesListKindIcParameterInner) IsValid() bool {
	for _, existing := range AllowedExtrasJournalEntriesListKindIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to extras_journal_entries_list_kind__ic_parameter_inner value
func (v ExtrasJournalEntriesListKindIcParameterInner) Ptr() *ExtrasJournalEntriesListKindIcParameterInner {
	return &v
}

type NullableExtrasJournalEntriesListKindIcParameterInner struct {
	value *ExtrasJournalEntriesListKindIcParameterInner
	isSet bool
}

func (v NullableExtrasJournalEntriesListKindIcParameterInner) Get() *ExtrasJournalEntriesListKindIcParameterInner {
	return v.value
}

func (v *NullableExtrasJournalEntriesListKindIcParameterInner) Set(val *ExtrasJournalEntriesListKindIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableExtrasJournalEntriesListKindIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableExtrasJournalEntriesListKindIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtrasJournalEntriesListKindIcParameterInner(val *ExtrasJournalEntriesListKindIcParameterInner) *NullableExtrasJournalEntriesListKindIcParameterInner {
	return &NullableExtrasJournalEntriesListKindIcParameterInner{value: val, isSet: true}
}

func (v NullableExtrasJournalEntriesListKindIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtrasJournalEntriesListKindIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// CircuitsCircuitsListStatusIcParameterInner the model 'CircuitsCircuitsListStatusIcParameterInner'
type CircuitsCircuitsListStatusIcParameterInner string

// List of circuits_circuits_list_status__ic_parameter_inner
const (
	CIRCUITSCIRCUITSLISTSTATUSICPARAMETERINNER_ACTIVE CircuitsCircuitsListStatusIcParameterInner = "active"
	CIRCUITSCIRCUITSLISTSTATUSICPARAMETERINNER_DECOMMISSIONED CircuitsCircuitsListStatusIcParameterInner = "decommissioned"
	CIRCUITSCIRCUITSLISTSTATUSICPARAMETERINNER_DEPROVISIONING CircuitsCircuitsListStatusIcParameterInner = "deprovisioning"
	CIRCUITSCIRCUITSLISTSTATUSICPARAMETERINNER_OFFLINE CircuitsCircuitsListStatusIcParameterInner = "offline"
	CIRCUITSCIRCUITSLISTSTATUSICPARAMETERINNER_PLANNED CircuitsCircuitsListStatusIcParameterInner = "planned"
	CIRCUITSCIRCUITSLISTSTATUSICPARAMETERINNER_PROVISIONING CircuitsCircuitsListStatusIcParameterInner = "provisioning"
)

// All allowed values of CircuitsCircuitsListStatusIcParameterInner enum
var AllowedCircuitsCircuitsListStatusIcParameterInnerEnumValues = []CircuitsCircuitsListStatusIcParameterInner{
	"active",
	"decommissioned",
	"deprovisioning",
	"offline",
	"planned",
	"provisioning",
}

func (v *CircuitsCircuitsListStatusIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CircuitsCircuitsListStatusIcParameterInner(value)
	for _, existing := range AllowedCircuitsCircuitsListStatusIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CircuitsCircuitsListStatusIcParameterInner", value)
}

// NewCircuitsCircuitsListStatusIcParameterInnerFromValue returns a pointer to a valid CircuitsCircuitsListStatusIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCircuitsCircuitsListStatusIcParameterInnerFromValue(v string) (*CircuitsCircuitsListStatusIcParameterInner, error) {
	ev := CircuitsCircuitsListStatusIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CircuitsCircuitsListStatusIcParameterInner: valid values are %v", v, AllowedCircuitsCircuitsListStatusIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CircuitsCircuitsListStatusIcParameterInner) IsValid() bool {
	for _, existing := range AllowedCircuitsCircuitsListStatusIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to circuits_circuits_list_status__ic_parameter_inner value
func (v CircuitsCircuitsListStatusIcParameterInner) Ptr() *CircuitsCircuitsListStatusIcParameterInner {
	return &v
}

type NullableCircuitsCircuitsListStatusIcParameterInner struct {
	value *CircuitsCircuitsListStatusIcParameterInner
	isSet bool
}

func (v NullableCircuitsCircuitsListStatusIcParameterInner) Get() *CircuitsCircuitsListStatusIcParameterInner {
	return v.value
}

func (v *NullableCircuitsCircuitsListStatusIcParameterInner) Set(val *CircuitsCircuitsListStatusIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCircuitsCircuitsListStatusIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCircuitsCircuitsListStatusIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCircuitsCircuitsListStatusIcParameterInner(val *CircuitsCircuitsListStatusIcParameterInner) *NullableCircuitsCircuitsListStatusIcParameterInner {
	return &NullableCircuitsCircuitsListStatusIcParameterInner{value: val, isSet: true}
}

func (v NullableCircuitsCircuitsListStatusIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCircuitsCircuitsListStatusIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


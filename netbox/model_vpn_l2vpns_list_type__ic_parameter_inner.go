/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.2 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// VpnL2vpnsListTypeIcParameterInner the model 'VpnL2vpnsListTypeIcParameterInner'
type VpnL2vpnsListTypeIcParameterInner string

// List of vpn_l2vpns_list_type__ic_parameter_inner
const (
	VPNL2VPNSLISTTYPEICPARAMETERINNER_EP_LAN VpnL2vpnsListTypeIcParameterInner = "ep-lan"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_EP_TREE VpnL2vpnsListTypeIcParameterInner = "ep-tree"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_EPL VpnL2vpnsListTypeIcParameterInner = "epl"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_EVP_LAN VpnL2vpnsListTypeIcParameterInner = "evp-lan"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_EVP_TREE VpnL2vpnsListTypeIcParameterInner = "evp-tree"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_EVPL VpnL2vpnsListTypeIcParameterInner = "evpl"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_MPLS_EVPN VpnL2vpnsListTypeIcParameterInner = "mpls-evpn"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_PBB_EVPN VpnL2vpnsListTypeIcParameterInner = "pbb-evpn"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_VPLS VpnL2vpnsListTypeIcParameterInner = "vpls"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_VPWS VpnL2vpnsListTypeIcParameterInner = "vpws"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_VXLAN VpnL2vpnsListTypeIcParameterInner = "vxlan"
	VPNL2VPNSLISTTYPEICPARAMETERINNER_VXLAN_EVPN VpnL2vpnsListTypeIcParameterInner = "vxlan-evpn"
)

// All allowed values of VpnL2vpnsListTypeIcParameterInner enum
var AllowedVpnL2vpnsListTypeIcParameterInnerEnumValues = []VpnL2vpnsListTypeIcParameterInner{
	"ep-lan",
	"ep-tree",
	"epl",
	"evp-lan",
	"evp-tree",
	"evpl",
	"mpls-evpn",
	"pbb-evpn",
	"vpls",
	"vpws",
	"vxlan",
	"vxlan-evpn",
}

func (v *VpnL2vpnsListTypeIcParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VpnL2vpnsListTypeIcParameterInner(value)
	for _, existing := range AllowedVpnL2vpnsListTypeIcParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VpnL2vpnsListTypeIcParameterInner", value)
}

// NewVpnL2vpnsListTypeIcParameterInnerFromValue returns a pointer to a valid VpnL2vpnsListTypeIcParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVpnL2vpnsListTypeIcParameterInnerFromValue(v string) (*VpnL2vpnsListTypeIcParameterInner, error) {
	ev := VpnL2vpnsListTypeIcParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VpnL2vpnsListTypeIcParameterInner: valid values are %v", v, AllowedVpnL2vpnsListTypeIcParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VpnL2vpnsListTypeIcParameterInner) IsValid() bool {
	for _, existing := range AllowedVpnL2vpnsListTypeIcParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to vpn_l2vpns_list_type__ic_parameter_inner value
func (v VpnL2vpnsListTypeIcParameterInner) Ptr() *VpnL2vpnsListTypeIcParameterInner {
	return &v
}

type NullableVpnL2vpnsListTypeIcParameterInner struct {
	value *VpnL2vpnsListTypeIcParameterInner
	isSet bool
}

func (v NullableVpnL2vpnsListTypeIcParameterInner) Get() *VpnL2vpnsListTypeIcParameterInner {
	return v.value
}

func (v *NullableVpnL2vpnsListTypeIcParameterInner) Set(val *VpnL2vpnsListTypeIcParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnL2vpnsListTypeIcParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnL2vpnsListTypeIcParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnL2vpnsListTypeIcParameterInner(val *VpnL2vpnsListTypeIcParameterInner) *NullableVpnL2vpnsListTypeIcParameterInner {
	return &NullableVpnL2vpnsListTypeIcParameterInner{value: val, isSet: true}
}

func (v NullableVpnL2vpnsListTypeIcParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnL2vpnsListTypeIcParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

